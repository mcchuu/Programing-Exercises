import java.util.Random;
import java.util.Scanner;

public class MegaMillions {
    static Scanner scanner = new Scanner(System.in);
    static Random random = new Random();
    static double balance;
    static double totalWinnings = 0;
    static double totalSpent = 0;

    public static void main(String[] args) {
        initializeGame();
        runGame();
        printGameSummary();
    }

    // Initializes the game (set balance, print welcome message)
    public static void initializeGame() {
        balance = 50.0;
        System.out.println("       WELCOME TO MEGA MILLIONS!\n =====================================");
        System.out.println("You start with $50.00.\n\n--------------------------------------");
        System.out.printf("Current Balance: $%.2f", balance);
        System.out.println("\n--------------------------------------");
    }

    // Run the game loop (handle multiple rounds of play)
    public static void runGame() {
        String choice;
        while (balance >= 2) {
            System.out.println("\nDo you want to play a round? (yes/no): ");
            choice = scanner.nextLine().toLowerCase();

            if (choice.equalsIgnoreCase("yes")) {
                playRound();
            } else if (choice.equalsIgnoreCase("no")) {
                break;
            } else {
                System.out.println("Invalid input. Try again.");
            }
        }
    }

    // Play one round (handle number selection, ticket purchase, drawing numbers, checking results, updating balance)
    public static void playRound() {
        int[] numbers = generateNumbers();
        int megaball = numbers[5];

        // Deduct ticket cost from balance
        double ticketCost = 2.0;
        updateBalance(-ticketCost);
        totalSpent += ticketCost;

        // Show user's Quick Pick numbers and Mega Ball
        System.out.print("Your Quick Pick: [");
        for (int i = 0; i < 5; i++) {
            System.out.print(numbers[i] + " ");
        }
        System.out.print("] Mega Ball: " + megaball);

        // Generate the winning numbers and Mega Ball
        int[] winningNumbers = generateNumbers();
        int winningMegaBall = winningNumbers[5];

        // Count how many numbers match
        int matches = countMatches(numbers, winningNumbers);
        System.out.println("\nWinning numbers: [");
        for (int i = 0; i < 5; i++) {
            System.out.print(winningNumbers[i] + " ");
        }
        System.out.println("] Mega Ball: " + winningMegaBall);

        // Check for a match and determine prize
        int prize = getPrize(matches);

        // If there's a match, apply Megaplier and update balance
        if (matches > 0 || megaball == winningMegaBall) {
            int megaplier = getRandomMegaplier();
            System.out.println("You matched " + matches + " numbers and Mega Ball: " + (megaball == winningMegaBall));
            prize *= megaplier;
            System.out.println("Your Megaplier is: " + megaplier + "x");
            System.out.println("You win $" + prize);
            updateBalance(prize);
            totalWinnings += prize;
        } else {
            System.out.println("Sorry, no matches. Better luck next time!");
        }
    }

    // Updates the balance after ticket purchase and winnings
    public static void updateBalance(double amount) {
        balance += amount;
    }

    // Print game summary (total spent, total winnings, final balance)
    public static void printGameSummary() {
        System.out.println("\n====================================\n             GAME OVER\n====================================");
        System.out.printf("Total Spent: $%.2f\nTotal Winnings: $%.2f\nFinal Balance: $%.2f\n====================================", totalSpent, totalWinnings, balance);
    }

    // Generate an array of 5 unique random numbers (1-70)
    public static int[] generateNumbers() {
        int[] numbers = new int[6];
        numbers[5] = random.nextInt(26); // Mega Ball (1-25)

        int count = 0;
        while (count < 5) {
            int num = random.nextInt(70) + 1; // Numbers between 1 and 70
            if (!contains(numbers, num, count)) {
                numbers[count] = num;
                count++;
            }
        }
        return numbers;
    }

    // Check if an array contains a specific number up to a given count
    public static boolean contains(int[] numbers, int num, int count) {
        for (int i = 0; i < count; i++) {
            if (numbers[i] == num) {
                return true;
            }
        }
        return false;
    }

    // Count matching numbers between user and winning numbers
    public static int countMatches(int[] userNumbers, int[] winningNumbers) {
        int matches = 0;
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (userNumbers[i] == winningNumbers[j]) {
                    matches++;
                }
            }
        }
        return matches;
    }

    // Determine the prize amount based on matches
    public static int getPrize(int matches) {
        switch (matches) {
            case 5: return 1000000; // Grand prize
            case 4: return 50000;   // 4 numbers match
            case 3: return 100;     // 3 numbers match
            case 2: return 10;      // 2 numbers match
            case 1: return 1;       // 1 number match
            default: return 0;      // No matches
        }
    }

    // Get a random Megaplier value (2x, 3x, 4x, or 5x)
    public static int getRandomMegaplier() {
        int[] megapliers = {2, 3, 4, 5};
        return megapliers[random.nextInt(megapliers.length)];
    }
}
